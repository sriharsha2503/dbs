---EXAMPLE FUNCTION---

set serveroutput on;

create or replace 
function count_book(bk_subject varchar)
return number as 
bk_count number;

begin
select count(*) into bk_count from book where subject=bk_subject;

return bk_count;

end;
/

begin
dbms_output.put_line('Number of books"||count_book('&Subject'));
end;
/

---EXAMPLE PROCEDURE---
set serveroutput on;
create or replace
procedure display_hello(nam varchar) is 
p1_name varchar(20);
begin
p1_name:=nam;
dbms_output.put_line('Hello '||p1_name);
end;
/

set serveroutput on;
declare
begin
display_hello('&Name');
end;
/

---------------------------------------
1.

set serveroutput on;
create or replace
procedure greeting is
begin
dbms_output.put_line('Good Day to you');
end;
/

begin
greeting;
end;
/


---------------------
2.

set serveroutput on;

create or replace
procedure list_names(dname varchar) is
cursor c1 is select * from (instructor natural join course) where dept_name=dname;

begin
for rec in c1
loop
dbms_output.put_line('Name:'||rec.name||'Course ID: '||rec.course_id);
end loop;
end;
/

begin
list_names('&DepartmentName');
end;
/


Name:El SaidCourse ID: HIS-351
Name:CalifieriCourse ID: HIS-351
 

---------------------
3.
set serveroutput on;
create or replace
procedure p(nam varchar) is
cid varchar(8);
maxs number :=0;
begin

	for cr in(select course_id from course where dept_name=nam)
	loop
		declare
			cnt number;
		begin
			select count(distinct t.id)
			into cnt
			from takes t
			where t.course_id=cr.course_id;

			if cnt>maxs then
				maxs := cnt;
				cid := cr.course_id;
			end if;
		end;
	end loop;
	dbms_output.put_line('Department = '||nam||' Course = ' ||cid);
end p;
/
declare
begin
	p('&DepartmentName');
end;
/

Department = Finance Course = FIN-201


---------------------
4.

set serveroutput on;

create or replace
procedure list_names(dname varchar) is
cursor c is select * from (student s join course c on s.dept_name=c.dept_name) where s.dept_name=dname;

begin
for rec in c
loop
dbms_output.put_line('Name:'||rec.name||'Course ID: '||rec.course_id);
end loop;
end;
/

begin
list_names('&DepartmentName');
end;
/


Name:BrandtCourse ID: HIS-351


-------------------
5.

create or replace 
function square(n number)
return number as
n2 number;

begin
n2:=n*n;
return n2;
end;
/

declare
n number;

begin
n := '&InputNumber';
dbms_output.put_line('Square of input number = '||square(n));
end;
/

Enter value for inputnumber: 5
old   5: n := '&InputNumber';
new   5: n := '5';
Square of input number = 25

----------------
6.

set serveroutput on;

create or replace
function highest(dname varchar)
return varchar as
max_inst_name varchar(20);
cursor c1 is select * from instructor i where i.dept_name=dname;
max_sal number;

begin
max_sal:=0;
for rec in c1
loop
if rec.salary >= max_sal then
	max_sal:=rec.salary;
	max_inst_name:=rec.name;
end if;
end loop;
return max_inst_name;
end;
/

set serverouput on;
begin
dbms_output.put_line('Highest paid instructor :'||highest('&DepartmentName'));
end;
/

Highest paid instructor :Wu

----------------
7.
set serveroutput on;

create or replace package dept_desc as
procedure list_names(dname varchar);
function highest_sal(dname varchar) return number;
end dept_desc;
/




create or replace package body dept_desc as 
procedure list_names(dname varchar) is
cursor c1 is select * from (instructor i join course c on i.dept_name=c.dept_name) where i.dept_name=dname;
begin
for inst in c1
loop
dbms_output.put_line('Name:'||inst.name||'Course ID: '||inst.course_id);
end loop;
end;

function highest_sal(dname varchar)
return number as
max_sal number;
cursor c1 is select * from instructor i where i.dept_name=dname;

begin
max_sal:=0;
for rec in c1
loop
if rec.salary >= max_sal then
	max_sal:=rec.salary;
end if;
end loop;
return max_sal;
end;
end dept_desc;
/

set serveroutput on;

begin
dept_desc.list_names('&DepartmentName');
dbms_output.put_line('Highest salary : '||dept_desc.highest_sal('&DepartmentName'));
end;
/


Name:El SaidCourse ID: HIS-351
Name:CalifieriCourse ID: HIS-351
Highest salary : 62000
------------------------
8.

create or replace procedure calculate_interest(
    p in number,
    r in number,
    y in number,
    si out number,
    ci out number,
    s in out number
) as
begin
    si := (p * r * y) / 100;

    ci :=p * (power((1 + r / 100), y) - 1);

    s := p + si + ci;
end;
/

declare
    p number := 1000; -- Principle
    r number := 5;    -- Rate of interest
    y number := 3;    -- Number of years
    si number;        -- Simple interest
    ci number;        -- Compound interest
    ts number := 0;   -- Total sum
begin
    calculate_interest(p, r, y, si, ci, ts);
    dbms_output.put_line('Simple Interest: ' || si);
    dbms_output.put_line('Compound Interest: ' || ci);
    dbms_output.put_line('Total Sum: ' || ts);
end;
/
